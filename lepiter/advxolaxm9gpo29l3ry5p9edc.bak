{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-11-03T09:10:03.513+00:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-11-03T09:10:03.513+00:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "YOskDe+oDQCU32cECodtrw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Perhaps we could look briefly at what implementations currently exist?\r\n\r\nmetamath-exe: https://github.com/metamath/metamath-exe/blob/master/src/mmunif.c\r\nmmj2: (see also /doc/StepUnifier.html) https://github.com/digama0/mmj2/blob/master/src/mmj/pa/ProofUnifier.java\r\nmetamath-knife: I don't think this has a proof assistant yet, and formula.rs (comes up in searches but) is part of the verifier?\r\n\r\nAre there any more implementations anyone wants to offer, please?\r\n\r\nI think it's quite possible that anything goes when it comes to writing a unification algorithm?  Maybe it doesn't matter in the slightest how you come by a unification, because the very next thing you're going to do is run a validator to ensure the proof is correct anyway, and because a perfect algorithm does not currently exist so you're always going to have to be able to fall back on the option of manual unification.  Heuristics, AI, quantum superposition of all potential unifications, whatever.  I'll almost certainly stick to the standard algorithm anyway, but it might become tempting to massage away some difficulties (if any) encountered while attempting to re-unifying theorems in set.mm.\r\n\r\nOr maybe it does matter because it's important to know whether it's the proof or the unification that was wrong.\r\n"
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2022-11-03T09:09:28.384+00:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2022-11-03T09:09:33.487+00:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "implementations "
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "007e240d-efa8-0d00-94de-3a7b0a876daf"
	}
}